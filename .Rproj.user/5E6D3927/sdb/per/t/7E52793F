{
    "contents" : "base<-read.csv('HappyIndex_1.csv')\n\nnombres<-read.csv('Preguntas.csv')\n\n\n#me quedo con las variables que utilizaré ------------------------------------------------------------------------------------------------------------------------\n\nnames(base)\n\nbase<-base[,c(1:6,seq(8,58,2))]\n\nnames(base)<-c('contestada',\n               'encuesta',\n               'fecha',\n               'persona',\n               'canal',\n               'puesto',\n               as.character(nombres$codigo))\n\nnames(base)\n\n# quito observaciones raras----------------------------------------------------------------------------------------------------------------------------------------\n\nlevels(base[,8])\nwhich(base[,8]==\"\")\nbase<-base[-c(which(base[,8]==\"\")),]\nbase<-droplevels(base)\n\nsummary(base)\n\n# estructuración de la base----------------------------------------------------------------------------------------------------------------------------------------\n\nbase[base==' ']<-NA\nbase<-droplevels(base)\n\nsummary(base)\n\nfor(i in c(7,8,14,16,19:23,25,27,28,31)){\n  base[,i]<-factor(base[,i],levels=c('Nunca','Casi nunca','Algunas veces','Casi siempre','Siempre'),ordered=T)\n}\n\nbase[base=='No se']<-NA\nbase[base=='No sé']<-NA\nbase<-droplevels(base)\n\nsummary(base)\n\nfor(i in c(9,10,12,13,17,26)){\n  base[,i]<-factor(base[,i],levels=levels(base[,i])[c(4,2,1,3)],ordered=T)\n}\n\nsummary(base)\n\nbase$jefe_definicion<-factor(base$jefe_definicion,levels=levels(base$jefe_definicion)[c(5,2,3,1,4)],ordered=T)\n\nsummary(base)\n\nbase$asi_me_siento<-factor(base$asi_me_siento,levels=levels(base$asi_me_siento)[c(4,5,2,1,3)],ordered=T)\n\nsummary(base)\n\nbase[base=='La mayoria']<-'La mayoría'\nbase<-droplevels(base)\n\n\nbase$companeros<-factor(base$companeros,levels=levels(base$companeros)[c(4,3,1,2,5)],ordered=T)\n\nsummary(base)\n\nbase$companeros_son<-factor(base$companeros_son,levels=levels(base$companeros_son)[c(5,2,3,1,4)],ordered=T)\n\nsummary(base)\n\nbase$seguridad_largo_plazo<-factor(base$seguridad_largo_plazo,levels=levels(base$seguridad_largo_plazo)[c(3,2,1,5,4)],ordered=T)\n\nsummary(base)\n\nbase$seguridad_corto_plazo<-factor(base$seguridad_corto_plazo,levels=levels(base$seguridad_corto_plazo)[c(3,2,1,5,4)],ordered=T)\n\nsummary(base)\n\nbase$equipo_necesario<-factor(base$equipo_necesario,levels=levels(base$equipo_necesario)[c(3,4,1,2,5)],ordered=T)\n\nsummary(base)\n\n\n#checkpoint con la base limpia--------------------------------------------------------------------------------------\n\nsaveRDS(base,'base limpia.rds')\n\n#imputaciones----------------------------------------------------------------------------------------------------------------------\nlibrary(mi)\n\nsummary(base)\n\nbase_imputacion<-missing_data.frame(base[,7:32])\nimputaciones<-mi(base_imputacion,n.iter=12,n.chains=6,parallel=T)\n\nimputaciones_originales<-imputaciones\n\nhist(imputaciones,cex=0.6)\nRhats(imputaciones)\n\n\nimputaciones<-complete(imputaciones_originales,6)\n\nfor(i in 1:6){\n  imputaciones[[i]]<-imputaciones[[i]][1:26]\n}\n\n\nrm(list=setdiff(ls(), c(\"imputaciones\",'base')))\n\n#save.image(\"C:/Users/Pelishka/Desktop/happy index/base imputada.RData\")\n\n#load(\"C:/Users/Pelishka/Desktop/happy index/base imputada.RData\")\nload(\"septiembre18 2.Rdata\")\n\n#Agregamos los datos de la plantilla----------------------\n\nlibrary(readxl)\n\n\nhi_feb<-read_excel(\"Plantilla Socio Unico_Febrero.xlsx\")\nnombres<-hi_feb[1,]\nhi_feb<-hi_feb[-1,]\nnames(hi_feb)<-as.character(nombres)\nnames(hi_feb)[c(1,24,11,17,3,37)]<-c(\"FIEMPLEADO_ID\",\"DESCRIPCION_FUNCION\",\"FECHA_NACIMIENTO\",\n                                     \"FECHA_INGRESO\",\"SEXO\",\"PLAZA\")\n\nhi_mar<-read_excel(\"Plantilla Socio Unico_Marzo.xlsx\",sheet=\"Plantilla Socio Unico_15032015\")\nnames(hi_mar)[c(1,22,11,17,3,30)]<-c(\"FIEMPLEADO_ID\",\"DESCRIPCION_FUNCION\",\"FECHA_NACIMIENTO\",\n                                     \"FECHA_INGRESO\",\"SEXO\",\"PLAZA\")\n\nhi2<-read_excel(\"Socio unico_HI_2.xlsx\",sheet=1)\n\n\nfebrero <- hi_feb[,c(1,24,11,17,3,36)]\nfebrero$F_NAC<-as.Date(paste(substr(as.character(febrero$FECHA_NACIMIENTO),7,10),\n                             substr(as.character(febrero$FECHA_NACIMIENTO),4,5),\n                             substr(as.character(febrero$FECHA_NACIMIENTO),1,2),sep=\"-\"),\"%Y-%m-%d\")\nfebrero$F_ING<-as.Date(paste(substr(as.character(febrero$FECHA_INGRESO),7,10),\n                             substr(as.character(febrero$FECHA_INGRESO),4,5),\n                             substr(as.character(febrero$FECHA_INGRESO),1,2),sep=\"-\"),\"%Y-%m-%d\")\naux<-febrero\naux$FECHA_NACIMIENTO<-aux$F_NAC\naux$FECHA_INGRESO<-aux$F_ING\naux$FIEMPLEADO_ID<-as.numeric(aux$FIEMPLEADO_ID)\naux<-aux[,-c(7,8)]\n\nfebrero<-aux;rm(aux)\n\nmarzo <- hi_mar[c(1,22,11,17,3,30)]\nmarzo$FECHA_NACIMIENTO<-as.Date(marzo$FECHA_NACIMIENTO)\nmarzo$FECHA_INGRESO<-as.Date(marzo$FECHA_INGRESO)\n\n\nhi2[hi2$SEXO==\"M\",\"SEXO\"]<-\"FEMENINO\"\nhi2[hi2$SEXO==\"H\",\"SEXO\"]<-\"MASCULINO\"\nhi2$FECHA_NACIMIENTO<-as.Date(hi2$FECHA_NACIMIENTO)\nhi2$FECHA_INGRESO<-as.Date(hi2$FECHA_INGRESO)\n\naux <- marzo %>%\n  anti_join(febrero,by=\"FIEMPLEADO_ID\")\n\naux2 <- rbind(febrero,aux)\nfebrero <- aux2;rm(aux,aux2)  \n\naux <- hi2 %>%\n  anti_join(febrero,by=\"FIEMPLEADO_ID\")\n\naux2 <- rbind(febrero,aux)\nfebrero <- aux2;rm(aux,aux2)\n\nsaveRDS(febrero,\"Plantilla.RDS\")\n\nplantilla<-readRDS(\"Plantilla.RDS\")\n\ncatalogo<-read_excel(\"catalogo_puestos.xlsx\",sheet=1)\nnames(catalogo)<-c(\"DESCRIPCION_FUNCION\",\"DESCRIPCION_LIMPI\")\n\naux<-plantilla %>%\n  inner_join(catalogo,by=\"DESCRIPCION_FUNCION\") %>%\n  mutate(DESCRIPCION_FUNCION=DESCRIPCION_LIMPI) %>%\n  select(-7)\n\nplantilla<-aux;rm(aux)\n\n#Pegamos los datos de la plantilla a la base imputada 1------------------------\ndf<-imputaciones[[1]][,1:26]\ndf$FIEMPLEADO_ID <- base$FIEMPLEADO_ID\ndf$id<-base$id\n\naux <- df %>%\n  inner_join(plantilla,by=\"FIEMPLEADO_ID\")\n\ndf<-aux;rm(aux)\n\n# Quito empleados duplicados--------------\nauxx<- df %>%\n  mutate(index=row.names(.)) %>%\n  arrange(desc(FIEMPLEADO_ID),index) %>%\n  filter(!duplicated(FIEMPLEADO_ID))\n\ndf<-auxx;rm(auxx)\n\nlibrary(lubridate)\ndf$EDAD<-year(today())-year(df$FECHA_NACIMIENTO)\ndf$ANTIGUEDAD<-year(today())-year(df$FECHA_INGRESO)\n\nquantile(df$ANTIGUEDAD, prob = seq(0, 1, length = 101), type = 5,na.rm=T)\n\ndf <- df %>%\n  mutate(EDAD_C=cut(EDAD,\n                    breaks=c(17,25,35,45,55,65,Inf),\n                    labels=c(\"18 a 25\",\"26 a 35\",\"36 a 45\",\"46 a 55\",\"56 a 65\",\"66 o más\")),\n         ANTIGUEDAD_C=cut(ANTIGUEDAD,\n                          breaks=c(-Inf,0,1,2,3,5,Inf),\n                          labels=c(\"Menos de un año\",\"Un año\",\"Dos años\",\"Tres años\",\n                                   \"Cuatro o cinco años\",\"Más de cinco años\")),\n         SEXO=as.factor(SEXO),\n         PLAZA=as.factor(PLAZA),\n         DESCRIPCION_FUNCION=as.factor(DESCRIPCION_FUNCION)) %>%\n  select(1:36,39,40,43,44)\n\nsaveRDS(df,\"df.RDS\")\n\ndatos<-read_excel(\"Datos_Empleados_V2.xlsx\",sheet=1)\nnames(datos)[1]<-\"FIEMPLEADO_ID\"\n\nauxx<- datos %>%\n  mutate(index=row.names(.)) %>%\n  arrange(desc(FIEMPLEADO_ID),index) %>%\n  filter(!duplicated(FIEMPLEADO_ID))\n\ndatos<-auxx;rm(auxx)\n\naux <- df %>%\n  inner_join(datos,by=\"FIEMPLEADO_ID\")\n\ndf <- aux; rm(aux)\n\nsaveRDS(df,\"df.RDS\")\n# análisis de correlaciones y dimensionalidad de la batería ---------------------------------------------------------------------------------------------------\n\nlibrary(polycor)\n\n\n#correlaciones<-lapply(imputaciones,hetcor)\n\ncorrelaciones<-hetcor(df[,4:29])\n\n# for(i in 1:6){\n#   correlaciones[[i]]<-correlaciones[[i]]$correlations\n# }\n\ncorrelaciones<-correlaciones$correlations\n\ncorrelaciones2<-correlaciones[,c(5,9,2,15,7,14,24,10,\n                                 21,17,22,18,4,19,8,\n                                 3,1,23,16,\n                                 13,6,25,\n                                 12,20,11,26)]\n\ncorrelaciones2<-correlaciones2[c(5,9,2,15,7,14,24,10,\n                                 21,17,22,18,4,19,8,\n                                 3,1,23,16,\n                                 13,6,25,\n                                 12,20,11,26),]\n\nlibrary(corrplot)\n\n#corrplot(correlaciones[[1]], method = \"circle\")\n\ncorrplot(correlaciones2,method=\"circle\")\n\nlibrary(psych)\n\n#alfas<-lapply(correlaciones,alpha)\n\nalfas<-alpha(correlaciones)\n\nsource(\"https://bioconductor.org/biocLite.R\")\nbiocLite(\"Rgraphviz\")\nlibrary(psych)\n#fa.parallel(correlaciones[[1]],n.obs=36531)\nfa.parallel(correlaciones,n.obs=43677)\n\n\n# factores3<-lapply(correlaciones,fa,nfactors=3,n.obs=36531)\n# factores4<-lapply(correlaciones,fa,nfactors=4,n.obs=36531)\n# factores5<-lapply(correlaciones,fa,nfactors=5,n.obs=36531,n.iter=50)\n# factores6<-lapply(correlaciones,fa,nfactors=6,n.obs=36531)\n# factores7<-lapply(correlaciones,fa,nfactors=7,n.obs=36531)\n# factores8<-lapply(correlaciones,fa,nfactors=8,n.obs=36531)\n\nfactores3<-fa(correlaciones,nfactors=3,n.obs=43677)\nfactores4<-fa(correlaciones,nfactors=4,n.obs=43677)\nfactores5<-fa(correlaciones,nfactors=5,n.obs=43677,n.iter=50)\nfactores6<-fa(correlaciones,nfactors=6,n.obs=43677)\nfactores7<-fa(correlaciones,nfactors=7,n.obs=43677)\nfactores8<-fa(correlaciones,nfactors=8,n.obs=43677)\n\n\n# lapply(factores3,fa.diagram,cut=.1)\n# lapply(factores4,fa.diagram,cut=.1)\n# lapply(factores5,fa.diagram,cut=.1)\n# lapply(factores6,fa.diagram,cut=.1)\n# lapply(factores7,fa.diagram,cut=.1)\n# lapply(factores8,fa.diagram,cut=.1)\n\nfa.diagram(factores3,cut=.1)\nfa.diagram(factores4,cut=.1)\nfa.diagram(factores5,cut=.1)\nfa.diagram(factores6,cut=.1)\nfa.diagram(factores7,cut=.1)\nfa.diagram(factores8,cut=.1)\n\n#a<-omega(correlaciones[[1]],n.obs=36531,nfactors=5,n.iter=50,fm='minres',plot=F)\n\na<-omega(correlaciones,n.obs=43677,nfactors=5,n.iter=50,fm='minres',plot=F)\n\na\n\nomega.diagram(a$om,cut=.1,cex=.5,sl=F)\n\nlibrary(qgraph)\n\ngrupos<-list()\ngrupos$ambiente<-c(9,5,2,15,7,14,24,10)\ngrupos$convivencia<-c(21,17,18,22,4,19,8)\ngrupos$jefe<-c(1,3,16,23)\ngrupos$seguridad<-c(25,6,13)\ngrupos$reconocimiento<-c(12,20,11,26)\n\n\n# grafica_correlaciones<-qgraph(correlaciones[[1]],minimum=.1,cut=.9,borders=TRUE,layout='spring',vsize=3,overlay=T,\n#                               vTrans=100,groups=grupos,node.width=2,\n#                               labels=names(imputaciones[[1]]))\n\ngrafica_correlaciones<-qgraph(correlaciones,minimum=.1,cut=.9,borders=TRUE,layout='spring',vsize=3,overlay=T,\n                              vTrans=100,groups=grupos,node.width=2,\n                              labels=names(df)[4:29])\n\n\nlibrary(mirt)\n\n# imputaciones_num<-list()\n# for(i in 1:6){\n#   temp<-imputaciones[[i]]\n#   for(j in 1:length(imputaciones[[i]])){\n#     temp[,j]<-as.numeric(temp[,j])\n#   }\n#   imputaciones_num[[i]]<-temp\n# }\n\ntemp<-df[,4:29]\nfor(j in 1:26){\n  temp[,j]<-as.numeric(temp[,j])\n}\nimputaciones_num<-temp\n\n\n\n#modelo<-lapply(imputaciones_num,mirt,model=1,itemtype='graded',set.seed=43829)\n\nmodelo<-mirt(imputaciones_num,model=1,itemtype='graded',set.seed=43677)\n\n\n# coef(modelo[[1]],IRTpars=T)\n# summary(modelo[[1]],rotate='oblimin')\n# plot(modelo[[1]],type='trace')\n# plot(modelo[[1]],type='infotrace')\n# plot(modelo[[1]],type='infoSE')\n\ncoef(modelo,IRTpars=T)\nsummary(modelo,rotate='oblimin')\nplot(modelo,type='trace')\nplot(modelo,type='infotrace')\nplot(modelo,type='infoSE')\n\n#scores<-lapply(modelo,fscores,full.scores=T,method='EAP')\n\nscores<-fscores(modelo,full.scores=T,method='EAP')\n\n# for(i in 1:6){\n#   imputaciones[[i]]$score<-as.numeric(scores[[i]])\n# }\n\ndf$score<-as.numeric(scores)\n\n# score ambiente--------------------------------------------------------------------------------------------------\n\n# imputaciones_num_ambiente<-list()\n# for(i in 1:6){\n#   imputaciones_num_ambiente[[i]]<-imputaciones_num[[i]][,grupos$ambiente]\n# }\n# modelo_ambiente<-lapply(imputaciones_num_ambiente,mirt,model=1,itemtype='graded',set.seed=43829)\n# scores_ambiente<-lapply(modelo_ambiente,fscores,full.scores=T,method='EAP')\n# \n# for(i in 1:6){\n#   imputaciones[[i]]$score_ambiente<-as.numeric(scores_ambiente[[i]])\n# }\n\nimputaciones_num_ambiente<-imputaciones_num[,grupos$ambiente]\nmodelo_ambiente<-mirt(imputaciones_num_ambiente,model=1,itemtype='graded',set.seed=43677)\nscores_ambiente<-fscores(modelo_ambiente,full.scores=T,method='EAP')\ndf$score_ambiente<-as.numeric(scores_ambiente)\n# score convivencia--------------------------------------------------------------------------------------------------\n\n# imputaciones_num_convivencia<-list()\n# for(i in 1:6){\n#   imputaciones_num_convivencia[[i]]<-imputaciones_num[[i]][,grupos$convivencia]\n# }\n# modelo_convivencia<-lapply(imputaciones_num_convivencia,mirt,model=1,itemtype='graded',set.seed=43829)\n# scores_convivencia<-lapply(modelo_convivencia,fscores,full.scores=T,method='EAP')\n# \n# for(i in 1:6){\n#   imputaciones[[i]]$score_convivencia<-as.numeric(scores_convivencia[[i]])\n# }\n\nimputaciones_num_convivencia<-imputaciones_num[,grupos$convivencia]\nmodelo_convivencia<-mirt(imputaciones_num_convivencia,model=1,itemtype='graded',set.seed=43677)\nscores_convivencia<-fscores(modelo_convivencia,full.scores=T,method='EAP')\ndf$score_convivencia<-as.numeric(scores_convivencia)\n# score jefe--------------------------------------------------------------------------------------------------\n\n# imputaciones_num_jefe<-list()\n# for(i in 1:6){\n#   imputaciones_num_jefe[[i]]<-imputaciones_num[[i]][,grupos$jefe]\n# }\n# modelo_jefe<-lapply(imputaciones_num_jefe,mirt,model=1,itemtype='graded',set.seed=43829)\n# scores_jefe<-lapply(modelo_jefe,fscores,full.scores=T,method='EAP')\n# \n# for(i in 1:6){\n#   imputaciones[[i]]$score_jefe<-as.numeric(scores_jefe[[i]])\n# }\n\nimputaciones_num_jefe<-imputaciones_num[,grupos$jefe]\nmodelo_jefe<-mirt(imputaciones_num_jefe,model=1,itemtype='graded',set.seed=43677)\nscores_jefe<-fscores(modelo_jefe,full.scores=T,method='EAP')\ndf$score_jefe<-as.numeric(scores_jefe)\n\n# score seguridad--------------------------------------------------------------------------------------------------\n\n# imputaciones_num_seguridad<-list()\n# for(i in 1:6){\n#   imputaciones_num_seguridad[[i]]<-imputaciones_num[[i]][,grupos$seguridad]\n# }\n# modelo_seguridad<-lapply(imputaciones_num_seguridad,mirt,model=1,itemtype='graded',set.seed=43829)\n# scores_seguridad<-lapply(modelo_seguridad,fscores,full.scores=T,method='EAP')\n# \n# for(i in 1:6){\n#   imputaciones[[i]]$score_seguridad<-as.numeric(scores_seguridad[[i]])\n# }\n\nimputaciones_num_seguridad<-imputaciones_num[,grupos$seguridad]\nmodelo_seguridad<-mirt(imputaciones_num_seguridad,model=1,itemtype='graded',set.seed=43677)\nscores_seguridad<-fscores(modelo_seguridad,full.scores=T,method='EAP')\ndf$score_seguridad<-as.numeric(scores_seguridad)\n\n# score reconocimiento--------------------------------------------------------------------------------------------------\n\n# imputaciones_num_reconocimiento<-list()\n# for(i in 1:6){\n#   imputaciones_num_reconocimiento[[i]]<-imputaciones_num[[i]][,grupos$reconocimiento]\n# }\n# modelo_reconocimiento<-lapply(imputaciones_num_reconocimiento,mirt,model=1,itemtype='graded',set.seed=43829)\n# scores_reconocimiento<-lapply(modelo_reconocimiento,fscores,full.scores=T,method='EAP')\n# \n# for(i in 1:6){\n#   imputaciones[[i]]$score_reconocimiento<-as.numeric(scores_reconocimiento[[i]])\n# }\n\nimputaciones_num_reconocimiento<-imputaciones_num[,grupos$reconocimiento]\nmodelo_reconocimiento<-mirt(imputaciones_num_reconocimiento,model=1,itemtype='graded',set.seed=43677)\nscores_reconocimiento<-fscores(modelo_reconocimiento,full.scores=T,method='EAP')\ndf$score_reconocimiento<-as.numeric(scores_reconocimiento)\n\n#Ponemos los pesos de los factores para graficar---------\nsummary(modelo)\n\npesos<-data.frame(preguntas=names(base)[3:28],\n                  nombre=names(df)[1:26],\n                  peso=round(c(.719,\n                         .833,\n                         .643,\n                         .845,\n                         .824,\n                         .714,\n                         .838,\n                         .846,\n                         .821,\n                         .893,\n                         .818,\n                         .799,\n                         .641,\n                         .742,\n                         .725,\n                         .694,\n                         .625,\n                         .669,\n                         .705,\n                         .836,\n                         .621,\n                         .651,\n                         .559,\n                         .730,\n                         .704,\n                         .647)*100))\n\npesos[c(9,5,2,15,7,14,24,10),\"dimension\"]<-\"Ambiente\"\npesos[c(21,17,18,22,4,19,8),\"dimension\"]<-\"Convivencia\"\npesos[c(1,3,16,23),\"dimension\"]<-\"Jefe\"\npesos[c(25,6,13),\"dimension\"]<-\"Seguridad\"\npesos[c(12,20,11,26),\"dimension\"]<-\"Reconocimiento\"\n\npesos<- pesos %>%\n  arrange(peso)\n\npesos$preguntas<-factor(pesos$preguntas,levels=as.character(pesos$preguntas))\n\nsaveRDS(pesos,\"df_grafica_pesos.RDS\")\n\nggplot(pesos,aes(x=preguntas,y=peso)) + \n  geom_point(aes(colour=dimension,group=dimension),size=12,alpha=.5) +\n  geom_text(aes(y=peso,label=round(peso,digits=2)),\n            colour='black',size=6) +\n  theme(panel.background=element_rect(fill='#C2D1E0'),\n        strip.background=element_rect(fill=\"#2c3e50\"),\n        panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n        axis.text.y=element_text(size=15),\n        legend.title=element_blank(),\n        legend.position=\"bottom\") +\n  coord_flip() +\n  xlab(\"\") +\n  ylab(\"\")\n\n#reescalamiento-------------------------------------------------------------------------------\n\n\nlibrary(ggplot2)\n\nggplot(imputaciones[[2]],aes(score))+\n  geom_density()\n\n\nggplot(imputaciones[[2]],aes(score_ambiente))+\n  geom_density()\n\n\nggplot(imputaciones[[2]],aes(score_convivencia))+\n  geom_density()\n\n\nggplot(imputaciones[[2]],aes(score_jefe))+\n  geom_density()\n\n\nggplot(imputaciones[[2]],aes(score_seguridad))+\n  geom_density()\n\n\nggplot(imputaciones[[2]],aes(score_reconocimiento))+\n  geom_density()\n\n\n#calibraciones----------------------------------------------------------------------------------------------\n\nfscores(modelo[[1]],method='EAP')\n\nlibrary(dplyr)\n\nbasecal<-imputaciones[[1]]\n\nbasecal<-basecal %>% mutate(score_int=cut(score,\n                                          breaks=c(-Inf,seq(-4,2.5,.1),Inf),\n                                          labels=paste('c',(c(-Inf,seq(-4,2.5,.1)))),sep=''))\n\nsummary(basecal[basecal$score_int=='c -1',])\n\nplot(basecal$score,basecal$score)\n\nanclas<-list()\nanclas$y<-6\nanclas$x<-(-1)\n\nescalamiento<-splinefun(x=c(min(basecal$score),anclas$x,max(basecal$score)),y=c(0,anclas$y,10))\nbasecal$score_r<-escalamiento(basecal$score)\n\nplot(basecal$score,basecal$score)\nplot(basecal$score,basecal$score_r)\n\nbasecal<-basecal %>% mutate(score_r_int=cut(score_r,\n                                            breaks=c(-Inf,1,2,3,4,5,6,7,8,9,Inf),\n                                            labels=c(1,2,3,4,5,6,7,8,9,10)))\n\nsummary(basecal[basecal$score==6,])\n\n\nggplot(basecal,aes(score_r))+\n  geom_density()\n\nplot(basecal$score,basecal$score_ambiente)\n\nplot(basecal$score,basecal$score_convivencia)\n\ndf$score<-as.numeric(df$score)\n\naux<-df %>%\n  inner_join(plantilla,by=\"FIEMPLEADO_ID\")\ndf<-aux;rm(aux)\n\n#análisis exploratorio-----------------------------------------------------------------------------------------------------------------\n\nlibrary(ggplot2)\n\nimputacion1<-imputaciones[[1]]\n\nggplot(base,aes(imputacion1[,7]))+\n  geom_bar(aes(y = (..count..)/sum(..count..)),fill='cornflowerblue',colour='gray10')\n\n\n#bosque de importancia de dimensiones------------------------------------------------------------\n\n\nlibrary(randomForest)\n\n#tuneRF(imputaciones[[1]][,28:32],imputaciones[[1]][,27],ntreeTry=2)\n\ntuneRF(df[,31:35],df[,30],ntreeTry=2)\n\n#bosque<-randomForest(imputaciones[[1]][,28:32],imputaciones[[1]][,27],ntree=100,mtry=1,importance=T,do.trace=T)\n\nbosque<-randomForest(df[,31:35],df[,30],ntree=100,mtry=2,importance=T,do.trace=T)\n\nvarImpPlot(bosque,sort=TRUE,type=1)\n\ndf<-readRDS(\"df.RDS\")\n\ntuneRF(df[,35:39],df[,34],ntreeTry=2)\n\nbosque<-randomForest(df[,35:39],df[,34],ntree=100,mtry=2,importance=T,do.trace=T)\n\nvarImpPlot(bosque,sort=TRUE,type=1)\n#Repetimos la gráfica de importancia\nimportancia<-data.frame(Score=c(\"Ambiente\",\"Convivencia\",\"Jefe\",\"Reconocimiento\",\"Seguridad\"),\n                        Porc_IncMSE=c(101.943,59.232,54.970,43.132,49.979)) %>%\n  arrange(Porc_IncMSE)\n\nimportancia$Score<-factor(importancia$Score,levels=as.character(importancia$Score))\n\nsaveRDS(importancia,\"Importancia_Dimensiones.RDS\")\n\nggplot(importancia,aes(x=Score,y=Porc_IncMSE)) + \n  geom_point(size=7) +\n  theme(panel.background=element_rect(fill='#C2D1E0'),\n        strip.background=element_rect(fill=\"#2c3e50\"),\n        panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n        axis.text.y=element_text(size=15),\n        legend.title=element_blank()) +\n  coord_flip() +\n  xlab(\"\") +\n  ylab(\"\")\n\n#Score Ambiente\n\ntuneRF(df[,c(9,5,2,15,7,14,24,10)],df[,35],ntreeTry=2)\n\nbosque<-randomForest(df[,c(9,5,2,15,7,14,24,10)],df[,35],ntree=100,mtry=2,importance=T,do.trace=F)\n\nvarImpPlot(bosque,sort=TRUE,type=1)\n\n#Score Convivencia\n\ntuneRF(df[,c(21,17,18,22,4,19,8)],df[,36],ntreeTry=2)\n\nbosque<-randomForest(df[,c(21,17,18,22,4,19,8)],df[,36],ntree=100,mtry=4,importance=T,do.trace=F)\n\nvarImpPlot(bosque,sort=TRUE,type=1)\n\n#Score Jefe\n\ntuneRF(df[,c(1,3,16,23)],df[,37],ntreeTry=2)\n\nbosque<-randomForest(df[,c(1,3,16,23)],df[,37],ntree=100,mtry=2,importance=T,do.trace=F)\n\nvarImpPlot(bosque,sort=TRUE,type=1)\n\n#Score Seguridad\n\ntuneRF(df[,c(25,6,13)],df[,38],ntreeTry=2)\n\nbosque<-randomForest(df[,c(25,6,13)],df[,38],ntree=100,mtry=2,importance=T,do.trace=F)\n\nvarImpPlot(bosque,sort=TRUE,type=1)\n\n\n#Búsqueda de Estructura en los datos--------------------------------------------------\nlibrary(bnlearn)\ndf<-readRDS(\"df.RDS\")\nbase_red<-df[,4:29]\n\n#Comienzo el ajuste de la red\nb1<-data.frame(from=names(base_red)[1:26],to=names(base_red)[27])\nb2<-data.frame(from=names(base_red)[1:26],to=names(base_red)[28])\nb3<-data.frame(from=names(base_red)[1:26],to=names(base_red)[29])\nb4<-data.frame(from=names(base_red)[1:26],to=names(base_red)[30])\nb5<-data.frame(from=names(base_red)[1:26],to=names(base_red)[31])\nb6<-data.frame(from=names(base_red)[1:26],to=names(base_red)[32])\nblist<-rbind(b1,b2,b3,b4,b5,b6)\nrm(b1,b2,b3,b4,b5,b6)\n\nbase_red<-base_red[!is.na(base_red[,31]),]\nbase_red<-base_red[!is.na(base_red[,32]),]\nsummary(base_red)\n\nred<-hc(base_red,score='bic')\ngraphviz.plot(red,shape='ellipse')\n\n\n\nsystem.time(boot.red_100<-boot.strength(base_red, R=100 ,\n                                        algorithm='hc',\n                                        cpdag = FALSE,\n                                        algorithm.args=list(score='bic')))\n\n\ngra_prom_100<-averaged.network(boot.red_100,threshold=0.9)\ngraphviz.plot(gra_prom_100,shape='ellipse')\nfuerza_arcos <- arc.strength(gra_prom_100, base_red, criterion = 'bic')\nstrength.plot(gra_prom_100, fuerza_arcos, shape='ellipse')\n\nregisterDoParallel(cl)\nsystem.time(boot.red_250<-boot.strength(base_red, R=250 ,algorithm='hc',cpdag = FALSE,algorithm.args=list(score='bic',blacklist=blist)))\nstopCluster(cl)\n\ngra_prom_250<-averaged.network(boot.red_250,threshold=0.9)\nfuerza_arcos <- arc.strength(gra_prom_250, base_red, criterion = 'bic')\nstrength.plot(gra_prom_250, fuerza_arcos, shape='ellipse')\n\nregisterDoParallel(cl)\nred_fit <- bn.fit(gra_prom_250, data =base_red , method = 'bayes', iss =600)\nstopCluster(cl)\nwrite.net(\"Red_HI.net\",red_fit)\n\n#Normalizamos los índices-----\ndf2<- df %>%\n   mutate(score_c=(score-min(score))/(max(score)-min(score))*100,\n          score_ambiente_c=(score_ambiente-min(score_ambiente))/(max(score_ambiente)-min(score_ambiente))*100,\n          score_convivencia_c=(score_convivencia-min(score_convivencia))/(max(score_convivencia)-min(score_convivencia))*100,\n          score_jefe_c=(score_jefe-min(score_jefe))/(max(score_jefe)-min(score_jefe))*100,\n          score_seguridad_c=(score_seguridad-min(score_seguridad))/(max(score_seguridad)-min(score_seguridad))*100,\n          score_reconocimiento_c=(score_reconocimiento-min(score_reconocimiento))/(max(score_reconocimiento)-min(score_reconocimiento))*100\n          ) %>%\n select(27:29,1:26, \n        score = score_c,\n        score_ambiente = score_ambiente_c,\n        score_convivencia = score_convivencia_c,\n        score_jefe = score_jefe_c,\n        score_seguridad = score_seguridad_c,\n        score_reconocimiento = score_reconocimiento_c)\n",
    "created" : 1443109368414.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "248131652",
    "id" : "7E52793F",
    "lastKnownWriteTime" : 1443811637,
    "path" : "~/Box Sync/Trabajo2/happy index/código.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}