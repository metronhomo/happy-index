{
    "contents" : " # server.R\nlibrary(shiny)\n\nshinyServer(function(input, output,session){\n  \n  observe({\n    if(input$filtrovar!=\"Total\"){\n      datos1<-df %>%\n        dplyr::select(one_of(input$filtrovar))\n      \n      r_options<-eval(parse(text=paste('list(',paste('\"',levels(datos1[,1]),'\"=\"',levels(datos1[,1]),'\"',\n                                                     collapse=',',sep=''),')')))\n    }else{\n      r_options<-\"Total\"\n    }\n    updateRadioButtons(session,'filtrocat',choices=r_options)\n  })\n\n  \n  output$plot1 <- renderPlot({\n    \n    \n      corrplot(correlaciones2, method = \"circle\",mar=c(0,0,0,0),tl.cex = 1.6,cl.cex=1.6,tl.col=\"black\")\n      \n    \n    \n    \n  }, height = 900, width = 1000)\n  \n \n  output$imagen1<-renderImage({\n    list(src='images/empleados.jpg',\n    filetype='image/jpeg',\n    alt='wiiiii')\n  }, \n  deleteFile = F)\n  \n  output$factores<-renderImage({\n    list(src='images/Factores.png',\n         filetype='image/png',\n         alt='wiiiii',\n         width = 1200,\n         height = 1300)\n  }, \n  deleteFile = F)\n  \n  output$qgraph<-renderPlot({\n    \n      qgraph(correlaciones,minimum=.1,cut=.9,borders=TRUE,layout='spring',vsize=4,overlay=T,\n             vTrans=100,groups=grupos,node.width=2,\n             labels=names(df)[4:29],normalize=T,label.scale=F,label.cex=1.2,legend.cex=1.2)\n\n  },height=1000,width=1100)\n  \n  \n#   output$factores<-renderPlot({\n#     if(input$gcor==1){\n#     fa.diagram(factores5,cut=.1,mai='Dimensiones de la batería')\n#     }\n#     if(input$gcor==2){\n#       qgraph(correlaciones,minimum=.1,cut=.9,borders=TRUE,layout='spring',vsize=4,overlay=T,\n#              vTrans=100,groups=grupos,node.width=2,\n#              labels=names(df)[4:29],normalize=T,label.scale=F,label.cex=1.2,legend.cex=1.2)\n#       \n#       \n#     }\n#   },height=1000,width=1100)\n#   \n#     \n  output$importancia<-renderPlot({\n    \n    graf_importancia_dimensiones(importancia)    \n    \n  },height=900,width=1000)\n  \n  \n  output$discriminacion<-renderPlot({\n    plot(modelo,type='infotrace',main='Trazas de información de los items')\n  },height=1200,width=1200)\n  \n  \n  output$red<-renderImage({\n    list(src='images/red.png',\n         filetype='image/png',\n         alt='wiiiii',\n         width = 1000,\n         height = 1000)\n  }, \n  deleteFile = F)\n  \n  output$descriptivo<-renderPlot({\n    graf(df,input$variable,input$facet,input$filtrovar,input$filtrocat)\n  })\n  \n  output$graf_pesos<-renderPlot({\n    graf_pesos(pesos)\n  },height=1100,width=1300)\n  \n  ### Data import:\n  Dataset <- reactive({\n    archivodisplay<-input$archivoupload\n    if (is.null(archivodisplay)) {\n      # User has not uploaded a file yet\n      return(data.frame())\n    }\n    \n    Dataset <- read.csv(archivodisplay$datapath,header=input$header,sep=input$sep)\n    \n    return(Dataset)\n  })\n  \n  output$contenido<-renderTable({\n    archivodisplay<-input$archivoupload\n    \n    if(is.null(archivodisplay)) return(NULL)\n    \n    return(Dataset())\n  })\n  \n  output$cosa <- renderTable({\n    #Checamos que haya variables para elegir \n    if (is.null(input$file)) return(NULL)\n    tabla<-indice(Dataset(),df,\n               modelo,\n               modelo_ambiente,\n               modelo_convivencia,\n               modelo_jefe,\n               modelo_reconocimiento,\n               modelo_seguridad)\n    return(tabla)\n  })\n  \n  output$archivodescarga <- downloadHandler(\n    filename = \"datos.csv\",\n    content = function(file){\n      tabla2<-indice(Dataset(),df,\n                     modelo,\n                     modelo_ambiente,\n                     modelo_convivencia,\n                     modelo_jefe,\n                     modelo_reconocimiento,\n                     modelo_seguridad)\n      write.csv(tabla2,file,row.names=F)\n    }\n  )\n  \n  output$contacto<-renderImage({\n    list(src='images/contacto.png',\n         filetype='image/png',\n         alt='wiiii',\n         width = 1200,\n         height = 900)\n  }, \n  deleteFile = F)\n  \n})",
    "created" : 1442966236007.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "19|30|27|2|\n30|31|34|2|\n37|32|43|2|\n46|29|52|2|\n69|34|73|2|\n76|37|78|2|\n",
    "hash" : "2498290559",
    "id" : "26DB3A4B",
    "lastKnownWriteTime" : 1444064394,
    "path" : "~/Box Sync/Trabajo2/happy index/aplicación/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}