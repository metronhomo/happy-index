{
    "contents" : "#Helpers-------\n\nfiltro<-function(df,variable,facet){\n  if(facet==\"Total\"){\n    df2 <- df %>%\n      select(one_of(variable)) \n    names(df2)<-c(\"var_x\")\n    df2 <- df2 %>%\n      group_by(var_x) %>%\n      summarise(n=n()) %>%\n      mutate(valor=(n/sum(n))*100) %>%\n      filter(complete.cases(var_x)) %>%\n      select(1,3)\n  }else{\n    df2 <- df %>%\n      select(one_of(facet,variable)) \n    names(df2)<-c(\"var_y\",\"var_x\")\n    df2 <- df2 %>%\n      group_by(var_y,var_x) %>%\n      summarise(n=n()) %>%\n      mutate(valor=(n/sum(n))*100) %>%\n      filter(complete.cases(var_y)) %>%\n      select(1,2,4)\n  }\n  return(df2)\n}\n\nfiltro2<-function(df,filtrovar,filtrocat){\n  if(filtrovar!=\"Total\"){\n    nrenglon <- df %>%\n      mutate(index=row.names(.)) %>%\n      select(one_of(filtrovar,\"index\"))\n    names(nrenglon)<-c(\"x\",\"index\")\n    nrenglon<- nrenglon %>%\n      filter(x==filtrocat) %>%\n      select(2)\n    df<-df[nrenglon$index,]\n  }\n  return(df)\n}\n\ntexto<-function(df,variable,facet){\n  df2 <- df %>%\n    select(one_of(facet,variable))\n  names(df2)<-c(\"x\",\"y\")\n  df3<- df2 %>%\n    group_by(x) %>%\n    summarise(media=mean(y))\n  return(df3)\n}\n\ngraf<-function(df,variable,facet,filtrovar,filtrocat){\n  df<-filtro2(df,filtrovar,filtrocat)\n  \n  if(facet == \"Total\"){\n    if(grepl(\"score\",variable)){\n      df2 <- df %>%\n        select(one_of(variable))\n      names(df2)<-c(\"x\")\n      lab<-paste(\"Media: \",round(mean(df2$x,na.rm=T),digits=0),sep=\"\")\n      ggplot(df2,aes(x)) + \n        geom_boxplot(aes(y=x),fill=\"#2c3e50\",colour=\"black\") + \n        annotate(\"text\",label=lab,y=99,x=20,colour='black',size=10) +\n        theme(panel.background=element_rect(fill='#C2D1E0'),\n              strip.background=element_rect(fill=\"#2c3e50\"),\n              panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n              axis.text.x=element_blank(),\n              axis.text.y=element_text(size=22)) +\n        coord_cartesian(ylim=c(-2,105)) +\n        ylab(\"\") + xlab(\"\")\n    }else{\n      df2<-filtro(df,variable,facet)\n      ggplot(df2,aes(x=var_x,y=valor)) + \n        geom_bar(stat=\"identity\",fill=\"#2c3e50\",colour=\"black\") + \n        geom_text(aes(y=valor + 3,label=paste0(round(valor),'%')),\n                  colour='black',size=6) +\n        theme(axis.text.x=element_text(angle=90,size=22),\n              axis.text.y=element_text(size=22),\n              panel.background=element_rect(fill='#C2D1E0'),\n              panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n              strip.background=element_rect(fill=\"#2c3e50\")) +\n        ylab(\"\") + xlab(\"\")\n    }\n  }else{\n    if(grepl(\"score\",variable)){\n      df2 <- df %>%\n        select(one_of(variable,facet))\n      names(df2)<-c(\"x\",\"y\")\n      df2<-df2[complete.cases(df2$y),]\n      df3 <- texto(df,variable,facet)\n      df3<-df3[complete.cases(df3$x),]\n      ggplot() + \n        geom_boxplot(data=df2,aes(y,x),fill=\"#2c3e50\",colour=\"black\") +\n        geom_text(data=df3,aes(label=round(media,digits=0),group=x,x=x),y=102,size=10) +\n        theme(panel.background=element_rect(fill='#C2D1E0'),\n              strip.background=element_rect(fill=\"#2c3e50\"),\n              strip.text.x = element_text(colour = 'white', size = 22),\n              panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n              axis.text.x=element_text(angle=90,size=22),\n              axis.text.y=element_text(size=22)) +\n        coord_cartesian(ylim=c(-2,105)) +\n        ylab(\"\") + xlab(\"\")\n    }else{\n      df2<-filtro(df,variable,facet)\n      ggplot(df2,aes(x=var_x,y=valor)) + \n        geom_bar(stat=\"identity\",fill=\"#2c3e50\",colour=\"black\") + \n        geom_text(aes(y=valor + 3,label=paste0(round(valor),\"%\")),\n                  colour='black',size=6) +\n        facet_wrap(~var_y) +\n        theme(axis.text.x=element_text(angle=90,size=22),\n              axis.text.y=element_text(size=22),\n              panel.background=element_rect(fill='#C2D1E0'),\n              strip.background=element_rect(fill=\"#2c3e50\"),\n              panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n              strip.text.x = element_text(colour = 'white', size = 22)) +\n        ylab(\"\") + xlab(\"\")\n    }\n  }\n}\n  \ngraf_pesos<-function(pesos){\n  ggplot(pesos,aes(x=preguntas,y=peso)) + \n    geom_point(aes(colour=dimension,group=dimension),size=12,alpha=.5) +\n    geom_text(aes(y=peso,label=round(peso,digits=2)),\n              colour='black',size=6) +\n    theme(panel.background=element_rect(fill='#C2D1E0'),\n          strip.background=element_rect(fill=\"#2c3e50\"),\n          panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n          axis.text.y=element_text(size=16,face=\"bold\"),\n          axis.text.x=element_text(size=16,face=\"bold\"),\n          legend.title=element_blank(),\n          legend.position=\"bottom\",\n          legend.text=element_text(size=17)) +\n    coord_flip() +\n    xlab(\"\") +\n    ylab(\"\")\n}\n\ngraf_importancia_dimensiones<-function(importancia){\n  ggplot(importancia,aes(x=Score,y=Porc_IncMSE)) + \n    geom_point(size=11,colour='#2c3e50') +\n    geom_point(size=8,colour='#C2D1E0') +\n    theme(panel.background=element_rect(fill='#C2D1E0'),\n          strip.background=element_rect(fill=\"#2c3e50\"),\n          panel.border = element_rect(colour = \"#2c3e50\", fill=NA, size=1),\n          axis.text.y=element_text(size=22,face=\"bold\"),\n          axis.title=element_text(size=18.5,colour=\"red\"),\n          legend.title=element_blank()) +\n    scale_y_continuous(breaks=NULL) +\n    coord_flip() +\n    xlab(\"\") +\n    ylab(\"<---   Menor Importancia                                                                             Mayor Importancia   --->\")\n}\n\nindice<-function(base,df,modelo,\n                 modelo_ambiente,\n                 modelo_convivencia,\n                 modelo_jefe,\n                 modelo_reconocimiento,\n                 modelo_seguridad){\n  \n  df2<- base %>%\n    mutate(index=row.names(.)) %>%\n    arrange(desc(FIEMPLEADO_ID),index) %>%\n    filter(!duplicated(FIEMPLEADO_ID)) %>%\n    select(one_of(names(base)[names(base) %in% names(df)[4:29]]))\n  \n  df3<- base %>%\n    mutate(index=row.names(.)) %>%\n    arrange(desc(FIEMPLEADO_ID),index) %>%\n    filter(!duplicated(FIEMPLEADO_ID)) %>%\n    select(one_of(names(base)[!(names(base) %in% names(df)[4:29])]))\n  \n  temp<-df2\n  for(j in 1:26){\n    temp[,j]<-as.numeric(temp[,j])\n  }\n  df2<-temp\n  \n  #Obtenemos el score general\n  scores<-as.data.frame(fscores(modelo,\n                                full.scores=T,\n                                method='EAP',\n                                response.pattern = df2))\n  df2$score<-as.numeric(scores$F1)\n  \n  #Obtenemos el índice de ambiente\n  ambiente<-df2[,grupos$ambiente]\n  scores_ambiente<-as.data.frame(fscores(modelo_ambiente,\n                                         full.scores=T,\n                                         method='EAP',\n                                         response.pattern = ambiente))\n  df2$score_ambiente<-as.numeric(scores_ambiente$F1)\n  \n  #Obtenemos el índice de convivencia\n  convivencia<-df2[,grupos$convivencia]\n  scores_convivencia<-as.data.frame(fscores(modelo_convivencia,\n                                            full.scores=T,\n                                            method='EAP',\n                                            response.pattern = convivencia))\n  df2$score_convivencia<-as.numeric(scores_convivencia$F1)\n  \n  #Obtenemos el score de jefe\n  jefe<-df2[,grupos$jefe]\n  scores_jefe<-as.data.frame(fscores(modelo_jefe,\n                                     full.scores=T,\n                                     method='EAP',\n                                     response.pattern = jefe))\n  df2$score_jefe<-as.numeric(scores_jefe$F1)\n  \n  #Obtenemos el score de seguridad\n  seguridad<-df2[,grupos$seguridad]\n  scores_seguridad<-as.data.frame(fscores(modelo_seguridad,\n                                          full.scores=T,\n                                          method='EAP',\n                                          response.pattern = seguridad))\n  df2$score_seguridad<-as.numeric(scores_seguridad$F1)\n  \n  #Obtenemos el score de reconocimiento\n  reconocimiento<-df2[,grupos$reconocimiento]\n  scores_reconocimiento<-as.data.frame(fscores(modelo_reconocimiento,\n                                               full.scores=T,\n                                               method='EAP',\n                                               response.pattern = reconocimiento))\n  df2$score_reconocimiento<-as.numeric(scores_reconocimiento$F1)\n  \n  df4 <- cbind(df3,df2)\n  \n  return(df4)\n}\n",
    "created" : 1442966235091.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "2|36|25|0|\n27|42|39|0|\n41|35|49|0|\n51|54|118|0|\n120|28|136|0|\n138|52|152|0|\n159|35|229|0|\n",
    "hash" : "2578077782",
    "id" : "D35E0C77",
    "lastKnownWriteTime" : 1444154726,
    "path" : "~/Box Sync/Trabajo2/happy index/aplicación/helpers.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}